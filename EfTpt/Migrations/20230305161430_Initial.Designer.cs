// <auto-generated />
using System;
using EfTpt.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EfTpt.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20230305161430_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EfTpt.Ef.Models.Transport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id");

                    b.ToTable("Transports");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EfTpt.Ef.Models.Car", b =>
                {
                    b.HasBaseType("EfTpt.Ef.Models.Transport");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("EfTpt.Ef.Models.Car", b =>
                {
                    b.HasOne("EfTpt.Ef.Models.Transport", null)
                        .WithOne()
                        .HasForeignKey("EfTpt.Ef.Models.Car", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cars_transports_id");

                    b.OwnsOne("EfTpt.Ef.Types.Speed", "Speed", b1 =>
                        {
                            b1.Property<Guid>("CarId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<int>("Value")
                                .HasColumnType("integer")
                                .HasColumnName("speed");

                            b1.HasKey("CarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("CarId")
                                .HasConstraintName("fk_cars_cars_id");
                        });

                    b.Navigation("Speed")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
